"use strict";angular.module("mtgSnatchApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.select","afkl.lazyImage","environment","angular-toArrayFilter"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/sets",{templateUrl:"views/sets.html",controller:"SetsCtrl",controllerAs:"sets"}).when("/cards",{templateUrl:"views/cards.html",controller:"CardsCtrl",controllerAs:"cards"}).otherwise({redirectTo:"/"})}]).config(["envServiceProvider",function(a){a.config({domains:{development:["localhost","dev.local"],c9:["mtg-snatch-geraldofcneto.c9users.io"],production:["acme.com","acme.net","acme.org"]},vars:{development:{apiUrl:"//localhost:8888/",staticUrl:"//localhost/static"},production:{apiUrl:"//api.acme.com/v2",staticUrl:"//static.acme.com"},c9:{apiUrl:"//mtg-collection-geraldofcneto.c9users.io/"}}}),a.check()}]),angular.module("mtgSnatchApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("mtgSnatchApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("mtgSnatchApp").controller("SetsCtrl",["$scope","$http",function(a,b){b({method:"GET",url:"https://api.magicthegathering.io/v1/sets"}).then(function(b){console.log(b),a.loadedSets=b.data.sets})}]),angular.module("mtgSnatchApp").controller("CardsCtrl",["$scope","$http","envService",function(a,b,c){function d(){j().length&&b.get(o+"card/?"+j()).then(function(b){a.loadedCards=b.data.slice(0,1e3),a.mappedCards=new Map,a.loadedCards.forEach(function(b){a.mappedCards.set(b.id,b)}),n()})}function e(){b.get(o+"set").then(function(b){a.sets=b.data})}function f(){b.get(o+"type").then(function(b){a.types=b.data})}function g(){b.get(o+"subtype").then(function(b){a.subtypes=b.data})}function h(){b.get(o+"legality").then(function(b){a.legalities=b.data})}function i(){b.get(o+"color").then(function(b){a.colors=b.data})}function j(){return Object.keys(a.query).map(function(b){return a.query[b]&&a.query[b].length?b+"="+a.query[b]:""}).filter(function(a){return""!==a}).join("&")}function k(a){return null!==a.imageUrl&&void 0!==a.imageUrl&&""!==a.imageUrl}function l(b){var c=(a.collection.get(b)||0)+1;a.collection.set(b,c),a.mappedCards.get(b).have=c}function m(b){var c=a.collection.get(b)||0;c&&(a.collection.set(b,c-1),a.mappedCards.get(b).have=c-1)}function n(){a.loadedCards.forEach(function(b){b.have!==a.collection.get(b.id)&&(b.have=a.collection.get(b.id))})}var o=c.read("apiUrl");a.loadCardNames=d,a.hasImage=k,a.addToCollection=l,a.removeFromCollection=m,a.query={name:"",set:"",type:"",subtype:"",legality:"",color:""},a.sets=[],a.types=[],a.subtypes=[],a.legalities=[],a.colors=[],a.collection=new Map,e(),f(),g(),h(),i()}]),angular.module("mtgSnatchApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/cards.html",'<label>Name</label> <input ng-change="loadCardNames()" ng-model="query.name" ng-model-options="{ debounce: 1000 }"> <ui-select multiple ng-model="query.set" theme="bootstrap" style="width: 300px" title="Choose card set" ng-change="loadCardNames()"> <ui-select-match placeholder="Select or search card set..."> [{{$item.code}}] {{$item.name}} {{$item.block? \'- \' + $item.block : \'\'}} </ui-select-match> <ui-select-choices repeat="set.code as set in sets | filter: $select.search"> [{{set.code}}] {{set.name}} {{set.block? \'- \' + set.block : \'\'}} </ui-select-choices> </ui-select> <ui-select multiple ng-model="query.color" theme="bootstrap" style="width: 300px" title="Choose card colors" ng-change="loadCardNames()"> <ui-select-match placeholder="Select or search card colors...">{{$item.name}}</ui-select-match> <ui-select-choices repeat="color.symbol as color in colors | filter: $select.search"> {{color.name}} </ui-select-choices> </ui-select> <ui-select multiple ng-model="query.type" theme="bootstrap" style="width: 300px" title="Choose card types" ng-change="loadCardNames()"> <ui-select-match placeholder="Select or search card types...">{{$item}}</ui-select-match> <ui-select-choices repeat="type in types | filter: $select.search"> {{type}} </ui-select-choices> </ui-select> <ui-select multiple ng-model="query.subtype" theme="bootstrap" style="width: 300px" title="Choose card subtypes" ng-change="loadCardNames()"> <ui-select-match placeholder="Select or search card subtypes...">{{$item}}</ui-select-match> <ui-select-choices repeat="subtype in subtypes | filter: $select.search"> {{subtype}} </ui-select-choices> </ui-select> <ui-select multiple ng-model="query.legality" theme="bootstrap" style="width: 300px" title="Choose card legality" ng-change="loadCardNames()"> <ui-select-match placeholder="Select or search card legality...">{{$item}}</ui-select-match> <ui-select-choices repeat="legality in legalities | filter: $select.search"> {{legality}} </ui-select-choices> </ui-select> <div ng-repeat="card in loadedCards | filter: hasImage " class="card-image float-card"> <div class="collection-overlay"> <div class="badge collection-have"> Have {{card.have}} <span class="glyphicon glyphicon-minus" aria-hidden="true" ng-click="removeFromCollection(card.id)" ng-show="card.have"></span> <span class="glyphicon glyphicon-plus" aria-hidden="true" ng-click="addToCollection(card.id)"></span> </div> <div class="badge collection-want">Want</div> <!-- \n\t\t<div class="badge collection-trade">Trade</div> \n\t\t--> </div> <div afkl-lazy-image="{{card.imageUrl}}" class="afkl-lazy-wrapper afkl-img-ratio-1-1 own-classname" afkl-lazy-image-options="{imgAttrs: [{alt: &quot;{{card.name}}&quot;}]}"></div> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>\'Allo, \'Allo!</h1> <p class="lead"> <img src="images/yeoman.8cb970fb.png" alt="I\'m Yeoman"><br> Always a pleasure scaffolding your apps. </p> <p><a class="btn btn-lg btn-success" ng-href="#/">Splendid!<span class="glyphicon glyphicon-ok"></span></a></p> </div> <div class="row marketing"> <h4>HTML5 Boilerplate</h4> <p> HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites. </p> <h4>Angular</h4> <p> AngularJS is a toolset for building the framework most suited to your application development. </p> <h4>Karma</h4> <p>Spectacular Test Runner for JavaScript.</p> </div>'),a.put("views/sets.html","<p ng-repeat=\"set in loadedSets | filter:'expansion' | orderBy:'-releaseDate'\"> <a ng-href=\"#/cards/{{set.code}}\">{{set.code}} - {{set.name}}</a> </p>")}]);